{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "35301256",
   "metadata": {},
   "source": [
    "# Objetivo"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18e44b28",
   "metadata": {},
   "source": [
    "Explore alternativas de **regressão linear** e crie o melhor modelo possível considerando todos os critérios associados a regressão estudados. Em particular, prever o desempenho de alunos de escolas públicas do estado de São Paulo com base em dados socioeconômicos do ENEM (Exame Nacional do Ensino Médio) 2021.\n",
    "\n",
    "Em particular, este desafio visa prever o desempenho dos candidatos ao enem considerando a nota média."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bbb2b1fd",
   "metadata": {},
   "source": [
    "# Conjunto de Dados"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "382fc091",
   "metadata": {},
   "source": [
    "O conjunto de dados utilizado trata de uma amostra estratificada por estado referente a $10\\%$ do total de candidatos inscritos. Os dados completos podem ser obtidos no Portal de Dados Abertos do INEP [(Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira)](https://www.gov.br/inep/pt-br). O conjunto de dados é baseado em duas fontes de dados: questionário socieconômico, realizado em **$2021$** na fase de inscrição dos candidatos. O questionário compreende $25$ questões socioeconômicas, está disponível no [link](https://www.gov.br/inep/pt-br/acesso-a-informacao/dados-abertos/microdados/enem) em anexo junto ao dicionário dos microdados.\n",
    "\n",
    "A variavél target do nosso desafio é a variável **NU_MEDIA** que foi criada como média aritmética das 5 notas obtidas pelos candidatos no exame: Nota da redação, Nota de matemática, Nota de Linguagens e Códigos, Nota de Ciências humanas e Nota de Ciências da Natureza.\n",
    "\n",
    "O dicionário de dados esta em anexo, junto ao conjunto dados."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "650151c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Insira aqui todos as bibliotecas utilizadas\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1a599cc6",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('ENEM.zip')\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "70501844",
   "metadata": {},
   "source": [
    "## Nota:\n",
    "Antes de iniciarmos um projeto de ML, fazemos sempre uma breve análise exploratória :D\n",
    "\n",
    "Alguns fatores a serem considerados: Existem outliers? Há valores ausentes? Como você lidará com variáveis categóricas? Existem características com baixa correlação com as variáveis alvo?\n",
    "\n",
    "*Dropar ou não dropar, eis a questão!*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0d8cdbaa",
   "metadata": {},
   "outputs": [],
   "source": [
    "### Não esqueça de fazer gráficos bonitos para te ajudar a entender o que está acontecendo!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "da4255fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "### Comente seus códigos e resultados. lembre-se que quem for ler seu código depois precisa entender o que foi feito."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0e2244d",
   "metadata": {},
   "source": [
    "### Parte 1:\n",
    "\n",
    "Dentre todas as variáveis exploradas, escolha 1 (apenas 1) para ajustar uma **Regressão Linear Simples** utilizando a função OLS da biblioteca ***stats.models***.\n",
    "\n",
    "**Nota:** baseie sua escolha na análise exploratória realizada."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "db46a590",
   "metadata": {},
   "outputs": [],
   "source": [
    "### Regressão Linear Simples:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "86d69616",
   "metadata": {},
   "source": [
    "Quais as conclusões a respeito do modelo escolhido?\n",
    "\n",
    "A variável escolhida explica bem a variabilidade da variável target? \n",
    "\n",
    "Todas as suposições em relação aos resíduos do modelo linear foram satisfeitas?\n",
    "\n",
    "Foram necessárias transformações em relação a variável target e a variável exploratória utilizada?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e4b699c",
   "metadata": {},
   "source": [
    "### Parte 2:\n",
    "\n",
    "Agora você deve ajustar uma **Regressão Linear Multipla**. Você pode utilizar tanto a biblioteca ***stats.models*** quanto, ***sciki-learn*** nessa parte do desafio. Lembre-se que as bibliotecas possuem objetivos diferentes (explicar x prever), mas a escolha é livre.\n",
    "\n",
    "De acordo com a função/biblioteca escolhida, faça os diagnósticos necessários a respeito do modelo ajustado.\n",
    "\n",
    "**Para modelos explicativos:** Repetir os passos da regressão linear simples.\n",
    "\n",
    "**Para modelos preditivos:** Lembre-se do protocolo treino/validação/teste para avaliação do modelo."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2c1acf2e",
   "metadata": {},
   "outputs": [],
   "source": [
    "### Regressão Linear Multipla:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f37dece",
   "metadata": {},
   "source": [
    "### Parte 3:\n",
    "\n",
    "Tente melhorar seu modelo de **Regressão Linear Multipla**. Experimente utilizar uma **Regressão Polinomial** ou **Regressão Penalizada** (Ridge, Lasso, Elastic Net).\n",
    "\n",
    "**Nota:** Nem sempre um modelo mais complexo é o melhor modelo!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a1c3950b",
   "metadata": {},
   "outputs": [],
   "source": [
    "### Regressão Linear Multipla:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3474e7e",
   "metadata": {},
   "source": [
    "### Conclusão:\n",
    "\n",
    "Dentre todos modelos estudados, qual você considera ter o melhor desempenho?\n",
    "\n",
    "**Comente:**"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
